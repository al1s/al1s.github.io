<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0"><channel><title>Learn another day (Записи о D3)</title><link>https://al1s.github.io/</link><description></description><atom:link href="https://al1s.github.io/ru/categories/d3.xml" type="application/rss+xml" rel="self"></atom:link><language>ru</language><copyright>Contents © 2018 &lt;a href="mailto:alstof@gmail.com"&gt;alstof&lt;/a&gt; </copyright><lastBuildDate>Sat, 04 Aug 2018 00:19:25 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Plan and done for July-15-2018</title><link>https://al1s.github.io/ru/posts/plan-and-done-for-july-15-2018/</link><dc:creator>alstof</dc:creator><description>&lt;div&gt;&lt;div class="section" id="what-will-i-learn-today"&gt;
&lt;h2&gt;What will I learn today?&lt;/h2&gt;
&lt;p&gt;Data visualization project: build US map with top economic activities for each state.  I want to get data spread over all industry groups for each state to see what are economy drivers for each state.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="done"&gt;
&lt;h2&gt;Done&lt;/h2&gt;
&lt;div class="section" id="challenges"&gt;
&lt;h3&gt;Challenges&lt;/h3&gt;
&lt;p&gt;#. Unable to get much data from API in the way I want.
#.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="solutions"&gt;
&lt;h3&gt;Solutions&lt;/h3&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;There are too much data I want to retrieve from &lt;a class="reference external" href="https://www.census.gov/data/developers/data-sets/cbp-nonemp-zbp/cbp-api.html"&gt;Census bureau API&lt;/a&gt; - it's ok to get 200 rows, but if I want to break it down to more grained data - the API shuts down. The reason I want more data - its current aggregation seems weird for my goals. For example - two industries (5415 - Computer Systems Design and Related Services is not in 51 - Information) belonging in my opinion to one group are actually in different.&lt;/p&gt;
&lt;p&gt;One way to solve it - prefetch all data to local storage and work with it. Then what is the best way to do it? Or maybe it's better to pretend that I have one, and just work with data as if I have the API for it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><guid>https://al1s.github.io/ru/posts/plan-and-done-for-july-15-2018/</guid><pubDate>Sun, 15 Jul 2018 17:43:31 GMT</pubDate></item><item><title>Plan and done for June-28-2018</title><link>https://al1s.github.io/ru/posts/plan-and-done-for-june-28-2018/</link><dc:creator>alstof</dc:creator><description>&lt;div&gt;&lt;div class="section" id="what-will-i-learn-today"&gt;
&lt;h2&gt;What will I learn today?&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Learn D3 fundamentals.&lt;/li&gt;
&lt;li&gt;Practice D3 selections.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="done"&gt;
&lt;h2&gt;Done&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;There are bunch of links to good articles to grasp what D3 is about:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://bl.ocks.org/mbostock/3808234"&gt;Bostock's entry point&lt;/a&gt; with many links inside;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://medium.com/@Elijah_Meeks/d3-is-not-a-data-visualization-library-67ba549e8520"&gt;Elijah Meeks explanation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;It takes some time to grasp how selection works in D3. Misunderstanding starts from &lt;a class="reference external" href="https://www.youtube.com/watch?v=8jvoTV54nX://www.youtube.com/watch?v=8jvoTV54nXw"&gt;Introduction to D3&lt;/a&gt; by Curran Kelleher and his &lt;a class="reference external" href="http://curran.github.io/screencasts/introToD3/examples/viewer/#/66"&gt;notebooks&lt;/a&gt;. If Update and Enter are different selections, then why when I set X coordinate and block color for update selection only, the whole result is correct - the color of all blocks is the same and they are divided appropriately along X axis?&lt;/p&gt;
&lt;p&gt;The only explanation is that there is only the whole cycle every time and all objects are involved:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;after &lt;code&gt;selection.data()&lt;/code&gt; we have empty placeholder for each data point in a dataset;&lt;/li&gt;
&lt;li&gt;after &lt;code&gt;selection.enter()&lt;/code&gt; we have DOM constructed accroding to data and attributes defined on stage 'Enter' applied to each new element;&lt;/li&gt;
&lt;li&gt;after &lt;code&gt;selection.update()&lt;/code&gt; we have additional attributes applied to 'old' elements, those which weren't added during Enter processing... and (it was the main bug in my understanding of the rendering stages in D3) to new elements if the attributes weren't defined during 'Enter' and defined on 'Update' stage;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;select.exit().remove()&lt;/code&gt; just removes unbound elements; something like a garbage collection.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In order to illustrate notes above I crafted two versions of the code:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="code javascript"&gt;&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-2"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-3"&gt;&lt;/a&gt;     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2750&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-4"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;rects&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;selectAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"rect"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-5"&gt;&lt;/a&gt;  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Render'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-7"&gt;&lt;/a&gt;  &lt;span class="c1"&gt;// Enter&lt;/span&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-8"&gt;&lt;/a&gt;  &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Before enter'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;rects&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-9"&gt;&lt;/a&gt;  &lt;span class="nx"&gt;rects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;enter&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"rect"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-10"&gt;&lt;/a&gt;    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-11"&gt;&lt;/a&gt;    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"width"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-12"&gt;&lt;/a&gt;    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"height"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-13"&gt;&lt;/a&gt;    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"fill-opacity"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-14"&gt;&lt;/a&gt;  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-15"&gt;&lt;/a&gt;    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"fill-opacity"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-16"&gt;&lt;/a&gt;  &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'After enter'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;rects&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-17"&gt;&lt;/a&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-18"&gt;&lt;/a&gt;  &lt;span class="c1"&gt;// Update&lt;/span&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-19"&gt;&lt;/a&gt;  &lt;span class="nx"&gt;rects&lt;/span&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-20"&gt;&lt;/a&gt;    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"fill"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-21"&gt;&lt;/a&gt;    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-22"&gt;&lt;/a&gt;  &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'After update'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;rects&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-23"&gt;&lt;/a&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-24"&gt;&lt;/a&gt;  &lt;span class="c1"&gt;// Exit&lt;/span&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-25"&gt;&lt;/a&gt;  &lt;span class="nx"&gt;rects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-26"&gt;&lt;/a&gt;    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-27"&gt;&lt;/a&gt;    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"fill-opacity"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-28"&gt;&lt;/a&gt;  &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'After exit'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;rects&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-29"&gt;&lt;/a&gt;  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groupEnd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Render'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-30"&gt;&lt;/a&gt;  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-31"&gt;&lt;/a&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-32"&gt;&lt;/a&gt;&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s2"&gt;"red"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-33"&gt;&lt;/a&gt;&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s2"&gt;"blue"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;2500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_130f0f4f22e44f2e8a41c9e74608dc95-34"&gt;&lt;/a&gt;&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s2"&gt;"green"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><guid>https://al1s.github.io/ru/posts/plan-and-done-for-june-28-2018/</guid><pubDate>Thu, 28 Jun 2018 10:23:31 GMT</pubDate></item></channel></rss>